version: '3.7'

volumes:
    postgres:
    pgadmin:

services:
  postgres:
    image: postgres:12.2
    container_name: ${POSTGRES_HOST}
    env_file:
      - .env
    volumes:
      - postgres:/data/postgres
    #healthcheck:
    #  test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
    #  interval: 30s
    #  timeout: 30s
    #  retries: 3
    #stdin_open: true
    #tty: true
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped

  pgadmin:
    container_name: ${PGADMIN_HOST}
    build:
      context: ./docker/pgadmin
      args:
        - APP_NAME
        - POSTGRES_HOST
        - POSTGRES_PORT
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - POSTGRES_DATABASE
    env_file:
      - .env
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    restart: unless-stopped

  backend:
    container_name: ${API_HOST}
    build: ./server
    command: sh -c "pip install -r requirements.txt && python manage.py migrate && python /src/manage.py runserver 0.0.0.0:${API_PORT}"
    volumes:
      - ./server:/src
      - ./.env:/src/notebin/.env
    env_file:
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      - postgres
    restart: unless-stopped
